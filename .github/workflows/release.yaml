name: Release

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

jobs:
  releases:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [stable]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - name: Setup Rust
        uses: hecrj/setup-rust-action@master
        with:
          rust-version: stable
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build artifacts
        shell: bash
        run: |
          cargo build --release
          echo ${{ matrix.os }}
          echo $GITHUB_WORKSPACE
          if [[ "${{ matrix.os }}" == "windows-latest" ]];
          then   
            chmod +x target/release/github-actions-playground.exe
            gzip -k -f target/release/github-actions-playground.exe
            mv target/release/github-actions-playground.exe.gz github-actions-playground_windows.gz
            echo "::set-env name=artifact_name::github-actions-playground_windows.gz"
          else
            if [[ "${{ matrix.os }}" == "ubuntu-latest" ]];
            then
              UNIX_FLAVOUR="linux"
            else
              UNIX_FLAVOUR="osx"
            fi
            echo $UNIX_FLAVOUR
            chmod +x target/release/github-actions-playground
            gzip -k -f target/release/github-actions-playground
            mv target/release/github-actions-playground.gz "github-actions-playground_${UNIX_FLAVOUR}.gz"
            echo "::set-env name=artifact_name::github-actions-playground_${UNIX_FLAVOUR}.gz"
          fi
          echo $artifact_name
          ls -la
      - name: Release to GitHub
        uses: opspresso/action-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: "v0.0.1"
          ASSET_PATH: $artifact_name
      # - name: Create GitHub Release
      #   id: create_release
      #   uses: actions/create-release@v1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     # tag_name: ${{ github.ref }}
      #     # release_name: ${{ github.ref }}
      #     tag_name: "v1"
      #     release_name: "v1"
      #     draft: false
      #     prerelease: false
      # - name: Upload Artifact to the release
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: .
      #
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip
